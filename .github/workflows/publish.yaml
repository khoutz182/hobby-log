on:
  push:
    branches:
      - main
jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: nologin
          password: ${{ secrets.SCALEWAY_API_KEY }}
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}

      - name: Build the Docker Image
        run: |
          DOCKER_TAG="${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/hobby-log:${{ github.sha }}"
          docker build . -t $DOCKER_TAG
          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV

      - name: Push the Docker Image
        run: docker push $DOCKER_TAG

      - name: Get App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.GH_ARGO_GITOPS_PRIVATE_KEY }}
          repositories: "argocd-gitops"

      - uses: actions/checkout@v4
        with:
          repository: khoutz182/argocd-gitops
          path: argocd-gitops
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

        # https://github.com/actions/create-github-app-token?tab=readme-ov-file#configure-git-cli-for-an-apps-bot-user
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

          # TODO: https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/making-authenticated-api-requests-with-a-github-app-in-a-github-actions-workflow
      - run: |
          cd argocd-gitops
          kubectl patch --local -f apps/user-apps/hobby-log/deploy.yaml -p '{"spec":{"template":{"spec":{"containers":[{"name":"hobby-log","image":"${{ env.DOCKER_TAG }}"}]}}}}' -o yaml > new_deploy.yaml
          mv new_deploy.yaml apps/user-apps/hobby-log/deploy.yaml
          git add apps/user-apps/hobby-log/deploy.yaml
          git commit -m "Update hobby log to ${{ env.DOCKER_TAG }}"
          git push
